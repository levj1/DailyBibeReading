@model DBReading.ViewModels.GeneratePlanViewModel
@{
    ViewBag.Title = "CreatePlan";
}
@section scripts{
    <script type="text/javascript">
        $(function () {
            $.getJSON("/Home/Groups/List", function (data) {
                var items = "<option> -------------</option>";
                $.each(data, function (i, group) {
                    items += "<option value='" + group.Value + "'>" + group.Text + "</option>";
                });
                $("#GroupBook").html(items);
            });

            $("#GroupBook").change(function () {
                $.getJSON("/Home/Books/List/" + $("#GroupBook > option:selected").attr("value"), function (data) {
                    var items = "<option> -------------</option>";
                    $.each(data, function (i, book) {
                        items += "<option value='" + book.Value + "'>" + book.Text + "</option>";
                    });
                    $("#Book").html(items);
                });
            });
        });
    </script>
}
<h2>CreatePlan</h2>
@using (@Html.BeginForm("CreatePlan", "GeneratePlan"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <div class="container">
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(c => c.ReadingPlan.Name)
                @Html.TextBoxFor(c => c.ReadingPlan.Name, new { @class = "form-control" })
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(c => c.ReadingPlan.StartDate)
                @Html.EditorFor(c => c.ReadingPlan.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        @*<div class="row">
            <div class="form-group">
                @Html.Label("Choose a Book of set of Books") <br />
                @foreach (var item in Model.BibleBooks.response.books)
                {
                    @Html.RadioButtonFor(m => m.ReadingPlan.BookOption, item.name) 
                    @item.name <br />
                }
            </div>
        </div>*@
        @*<div class="row">

            <div class="form-group">
                @Html.Label("Select book(s) for the reading") <br />
                @Html.DropDownListFor(m => m.DropDownReadingSelected, new SelectList(Model.DropDownReadingOption), new { onchange = "testfunction();" })
            </div>
        </div>*@
        <div class="row">
            <div class="form-group">
                <label for="GroupBook">Group book:</label>
                <select id="GroupBook" name="GroupBook"></select>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <label for="Book">books:</label>
                <select id="Book" name="Book"></select>
            </div>
        </div>

        <div class="row">
            <div class="form-group">
                <button type="submit" class="btn btn-primary" name="submit">Create</button>
            </div>
        </div>
    </div>    
}

<script type="text/javascript">
    function testfunction(value) {
        alert(value);
    }
</script>